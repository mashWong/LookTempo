import{_ as o,c as t,a as c,o as s}from"./index-CfQP00CV.js";const a={data(){return{mediaSource:null,sourceBuffer:null}},created(){window.fingerprint!=="c54b110c319d17b9859e89c20d47889c"&&this.$router.push("/")},mounted(){this.initMediaSource()},methods:{async initMediaSource(){const e=this.$refs.videoPlayer;"MediaSource"in window&&MediaSource.isTypeSupported('video/mp4; codecs="avc1.640028"')?(this.mediaSource=new MediaSource,e.src=URL.createObjectURL(this.mediaSource),this.mediaSource.addEventListener("sourceopen",this.onSourceOpen)):console.error("MediaSource or MIME type not supported")},onSourceOpen(){this.sourceBuffer=this.mediaSource.addSourceBuffer('video/mp4; codecs="avc1.640028"'),this.fetchAndAppendData()},async fetchAndAppendData(){try{const r=await(await fetch("/api/video/stream")).arrayBuffer();this.sourceBuffer.appendBuffer(r),this.sourceBuffer.addEventListener("updateend",()=>{!this.sourceBuffer.updating&&this.sourceBuffer.buffered.end(0)===r.byteLength&&(this.sourceBuffer.endOfStream(),this.mediaSource.endOfStream())})}catch(e){console.error("Error fetching or appending data:",e)}}}},d={ref:"videoPlayer",controls:""};function i(e,r,n,u,f,p){return s(),t("div",null,[c("video",d,null,512)])}const l=o(a,[["render",i],["__scopeId","data-v-90d966d6"]]);export{l as default};
